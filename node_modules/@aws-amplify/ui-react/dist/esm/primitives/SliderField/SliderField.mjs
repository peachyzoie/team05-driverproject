import{__rest as e}from"tslib";import r from"classnames";import*as t from"@radix-ui/react-slider";import*as a from"react";import{sanitizeNamespaceImport as l,isFunction as i}from"@aws-amplify/ui";import{classNameModifier as o}from"../shared/utils.mjs";import{ComponentClassNames as s}from"../shared/constants.mjs";import"../Field/FieldClearButton.mjs";import{FieldDescription as d}from"../Field/FieldDescription.mjs";import{FieldErrorMessage as m}from"../Field/FieldErrorMessage.mjs";import{FieldGroup as n}from"../FieldGroup/FieldGroup.mjs";import{Flex as c}from"../Flex/Flex.mjs";import{Label as u}from"../Label/Label.mjs";import{splitPrimitiveProps as p}from"../utils/splitPrimitiveProps.mjs";import{View as b}from"../View/View.mjs";import{useStableId as f}from"../utils/useStableId.mjs";const{Range:F,Root:S,Thumb:g,Track:C}=l(t),E="slider-label",h="slider-root",k="slider-track",v="slider-range",T=a.forwardRef(((t,l)=>{var{ariaValuetext:E,className:h,defaultValue:k=0,descriptiveText:v,emptyTrackColor:T,errorMessage:j,filledTrackColor:y,formatValue:V,hasError:x=!1,id:N,isDisabled:R,isValueHidden:z=!1,label:H,labelHidden:w=!1,onChange:I,orientation:M="horizontal",outerEndComponent:D,outerStartComponent:G,testId:L,thumbColor:P,trackSize:O,value:B,size:q}=t,A=e(t,["ariaValuetext","className","defaultValue","descriptiveText","emptyTrackColor","errorMessage","filledTrackColor","formatValue","hasError","id","isDisabled","isValueHidden","label","labelHidden","onChange","orientation","outerEndComponent","outerStartComponent","testId","thumbColor","trackSize","value","size"]);const J=f(N),K=f(),Q=f(),U=v?Q:void 0,{styleProps:W,rest:X}=p(A),Y=void 0!==B,[Z,$]=a.useState(Y?B:k),_=Y?[B]:void 0,ee=Y?void 0:[k],re=a.useCallback((e=>{$(e[0]),i(I)&&I(e[0])}),[I]),te=a.useMemo((()=>{const e=i(V)?V(Z):Z;return"string"==typeof V?a.createElement(b,{as:"span"},e):e}),[Z,V]),ae="vertical"===M,le=r(s.SliderFieldTrack,o(s.SliderFieldTrack,M),o(s.SliderFieldTrack,q)),ie=r(s.SliderFieldRoot,o(s.SliderFieldRoot,M),o(s.SliderFieldRoot,q),h);return a.createElement(c,Object.assign({className:r(s.Field,o(s.Field,q),s.SliderField),testId:L,"data-size":q},W),a.createElement(u,{className:s.SliderFieldLabel,id:K,testId:"slider-label",visuallyHidden:w},a.createElement(b,{as:"span"},H),z?null:te),a.createElement(d,{id:Q,labelHidden:w,descriptiveText:v}),a.createElement(n,{className:s.SliderFieldGroup,id:J,orientation:M,outerStartComponent:G,outerEndComponent:D},a.createElement(S,Object.assign({className:ie,"data-testid":"slider-root",disabled:R,defaultValue:ee,onValueChange:re,orientation:M,ref:l,value:_},X),a.createElement(C,{className:le,"data-testid":"slider-track",style:{backgroundColor:String(T),[""+(ae?"width":"height")]:O}},a.createElement(F,{className:r(s.SliderFieldRange,o(s.SliderFieldRange,M)),"data-testid":"slider-range",style:{backgroundColor:String(y)}})),a.createElement(g,{"aria-describedby":U,"aria-labelledby":K,"aria-valuetext":E,className:r(s.SliderFieldThumb,o(s.SliderFieldThumb,q)),style:{backgroundColor:String(P)}}))),a.createElement(m,{hasError:x,errorMessage:j}))}));T.displayName="SliderField";export{E as SLIDER_LABEL_TEST_ID,v as SLIDER_RANGE_TEST_ID,h as SLIDER_ROOT_TEST_ID,k as SLIDER_TRACK_TEST_ID,T as SliderField};
